#!/bin/bash
set -x

pod() {
###clone e2e-openshift-repo
echo "cloning e2e-openshift repo*************"
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port 'git clone -b OpenEBS-base https://github.com/openebs/e2e-openshift.git'
sshpass -p $pass ssh -o StrictHostKeyChecking=no $user@$ip -p $port 'cd e2e-openshift && bash Openshift-EE/pipelines/OpenEBS-base/stages/5-infra-chaos/M8WY-node-evict/node-evict node '"'$CI_JOB_ID'"'' '"'$CI_PIPELINE_ID'"' '"'$CI_COMMIT_SHA'"'
}

node() {
job_id=$(echo $1)
pipeline_id=$(echo $2)
commit_id=$(echo $3)
source ~/.profile
gittoken=$(echo "$github_token")
case_id=M8WY
observer_node=$(cat infra/node_name)

time="date"
current_time=$(eval $time)

present_dir=$(pwd)
echo $present_dir

bash Openshift-EE/utils/e2e-cr jobname:evict-node jobphase:Waiting
bash Openshift-EE/utils/e2e-cr jobname:evict-node jobphase:Running init_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

echo "*******Deploying Busybox-Deployment****"

test_name=$(bash Openshift-EE/utils/generate_test_name testcase=busybox-provision-evict-node metadata="")
echo $test_name

cd litmus
echo "Running the litmus test for Busybox Deployment.."
cp apps/busybox/deployers/run_litmus_test.yml deploy_evict_test.yml

sed -i -e 's/app-busybox-ns/evict-node/g' \
-e 's/busybox-litmus/busybox-evict/g' \
-e 's/statefulset/deployment/g' deploy_evict_test.yml

cat deploy_evict_test.yml

bash ../Openshift-EE/utils/litmus_job_runner label='app:busybox-evict' deploy_evict_test.yml
cd ..
bash Openshift-EE/utils/dump_cluster_state;
bash Openshift-EE/utils/event_updater jobname:evict-node $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

if [ "$?" != "0" ]; then
exit 1;
fi

echo "******EVICT NODE**********"

test_name=$(bash Openshift-EE/utils/generate_test_name testcase=node-failure-taint metadata="")
echo $test_name

cd litmus
cp apps/percona/chaos/taint_node/run_litmus_test.yml run_evict_test.yml

sed -i -e 's/value: app-percona-ns/value: evict-node/g' \
-e 's/name=percona/app=busybox-sts/g' \
-e 's/value: "enable"/value:/g' \
-e 's/liveness=percona-liveness/liveness=/g' run_evict_test.yml

sed -i -e "s|#nodeSelector|nodeSelector|g" \
-e "s|#  kubernetes.io/hostname:|  kubernetes.io/hostname: ${observer_node}|g" run_evict_test.yml

cat run_evict_test.yml

bash ../Openshift-EE/utils/litmus_job_runner label='name:node-failure-taint' run_evict_test.yml
cd ..
bash Openshift-EE/utils/dump_cluster_state;
bash Openshift-EE/utils/event_updater jobname:evict-node $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

if [ "$?" != "0" ]; then
exit 1;
fi

echo "********Deprovisioning Busybox Application*******"

test_name=$(bash Openshift-EE/utils/generate_test_name testcase=busybox-deprovision-evict-node metadata="")
echo $test_name

cd litmus
cp apps/busybox/deployers/run_litmus_test.yml deprovision_evict_node.yml

sed -i -e 's/generateName: litmus-busybox-deploy/generateName: litmus-busybox-deprovision/g' \
-e 's/app-busybox-ns/evict-node/g' \
-e 's/busybox-litmus/busybox-evict/g' \
-e 's/value: provision/value: deprovision/g' deprovision_evict_node.yml

cat deprovision_evict_node.yml

bash ../Openshift-EE/utils/litmus_job_runner label='app:busybox-deprovision-litmus' deprovision_evict_node.yml
cd ..
bash Openshift-EE/utils/dump_cluster_state;
bash Openshift-EE/utils/event_updater jobname:evict-node $test_name jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id"

current_time=$(eval $time)
bash Openshift-EE/utils/e2e-cr jobname:evict-node jobphase:Completed end_time:"$current_time" jobid:"$job_id" pipelineid:"$pipeline_id" testcaseid:"$case_id" test_result:Pass
}

if [ "$1" == "node" ];then
  node $2 $3 $4
else
  pod
fi
